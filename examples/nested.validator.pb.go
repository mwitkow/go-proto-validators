// Code generated by protoc-gen-govalidators. DO NOT EDIT.

package validator_examples

import (
	errors "errors"
	go_proto_validators "github.com/mwitkow/go-proto-validators"
	regexp "regexp"
)

func (m *InnerMessage) Validate() error {
	if m.GetSomeInteger() <= 0 {
		return go_proto_validators.FieldError("SomeInteger", errors.New("some_integer is not greater than 0"))
	}
	if m.GetSomeInteger() >= 100 {
		return go_proto_validators.FieldError("SomeInteger", errors.New("some_integer is not smaller than 100"))
	}

	return nil
}

var OuterMessageImportantStringRE = regexp.MustCompile(`^[a-z]{2,5}$`)

func (m *OuterMessage) Validate() error {
	if !OuterMessageImportantStringRE.MatchString(string(m.GetImportantString())) {
		return go_proto_validators.FieldError("ImportantString", errors.New(`important_string should match regular expression "^[a-z]{2,5}$"`))
	}

	if m.GetInner() != nil {
		if err := go_proto_validators.CallValidatorIfExists(m.GetInner()); err != nil {
			return go_proto_validators.FieldError("Inner", err)
		}
	}
	if m.GetInner() == nil {
		return go_proto_validators.FieldError("Inner", errors.New("inner should be set"))
	}

	return nil
}
